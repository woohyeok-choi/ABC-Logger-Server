plugins {
    id 'java'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'com.google.protobuf' version '0.8.8'
}

group 'kaist.iclab.abclogger'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    google()
    jcenter()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.61"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    /**
     * gRPC
     */
    implementation 'io.grpc:grpc-netty-shaded:1.26.0'
    implementation 'io.grpc:grpc-protobuf:1.26.0'
    implementation 'io.grpc:grpc-stub:1.26.0'

    /**
     * Kroto - gRPC in Coroutine
     */
    implementation "com.github.marcoferrer.krotoplus:kroto-plus-coroutines:0.6.0"

    /**
     * Exposed - DB framework for Kotlin
     */
    implementation 'org.jetbrains.exposed:exposed-core:0.20.3'
    implementation "org.jetbrains.exposed:exposed-dao:0.20.3"
    implementation "org.jetbrains.exposed:exposed-jdbc:0.20.3"

    /**
     * HikariCP for connection pooling
     */
    implementation 'com.zaxxer:HikariCP:3.4.2'

    /**
     * PostgreSql connector
     */
    implementation "org.postgresql:postgresql:42.2.2"

    /**
     * RxJava3
     */
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0-RC8'

    /**
     * Koin - dependency injection
     */
    implementation "org.koin:koin-core:2.0.1"
    implementation "org.koin:koin-core-ext:2.0.1"

    /**
     * Test
     */
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
    main.proto.srcDirs += 'grpc'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.11.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.26.0'
        }
        kroto {
            artifact = "com.github.marcoferrer.krotoplus:protoc-gen-grpc-coroutines:0.6.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
                kroto {}
            }
        }
    }
}